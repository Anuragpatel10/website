Interactables
=============

```javascript
interact('.drag-and-resize')
  .draggable({
    snap: {
      targets: [
        { x: 100, y: 200 },
        function (x, y) { return { x: x % 20, y: y }; }
    ]}
  })
  .resizable({
    inertia: true
  });
```

The `interact` function takes an Element or CSS selector and an optional
`options` object.  This returns an `Interactable` object which has several
methods and properties to configure what events it can fire and to modify the
reported coordinates. These methods have a fluent interface so method calls can
be chained nicely.

Selector Contexts
-----------------

```html
<ul id="my-list">
  <li> item 1 </li>
  <li> item 2 </li>
  <li> item 3 </li>
</ul>
```

```javascript
var myList = document.querySelector('#my-list');

interact('li', {
    context: myList
  })
  .draggable({ /* ... */ });
```

If you want to use a selector to target elements but only want to target the
children of a certain element, add a `context` element to the `options` object
when creating the `Interactable`.

```javascript
interact('li') === interact('li', { context: document })  // true
interact('li') === interact('li', { context: myList })    // false
```

`interact` returns a different object if the same selector is used but a
different context is specified. The default context is the `document`.
